### 设置Logger输出级别和输出目的地  ###
log4j.rootLogger=DEBUG,stdout,log4file

### 把日志信息输出到控制台  ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
#指定stdout的输出端的layout是哪种形式，这里是“PatternLayout”，可以灵活指定布局模式#
##对上述pattern布局指定打印信息的具体格式##
## %d是 输出时间    %p是输出优先级  %c 输出所属的类目，通常就是所在类的全名  %m 输出代码中指定的消息   %n 输出一个回车换行符 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n

#添加需要调试信息的包写在log4j.logger.的后面
#log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.javax.sql=INFO
#log4j.logger.java.sql.ResultSet=INFO
#log4j.logger.java.sql.PreparedStatement=DEBUG,stdout
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG


### 把日志信息输出到文件 log4j.log ###
#log4j.appender.log4file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.log4file.File=F:/bicLog/bic
#log4j.appender.log4file.DatePattern='_'yyyy-MM-dd'.log'
#log4j.appender.log4file.layout=org.apache.log4j.PatternLayout
#log4j.appender.log4file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %l %F %p %m%n

